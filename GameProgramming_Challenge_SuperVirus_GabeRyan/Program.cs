using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;

namespace GameProgramming_Challenge_SuperVirus_GabeRyan
{
    internal class Program
    {
        static Random random = new Random();
        

        static char[,] minimap = {
    {'-','-','-','-','-','^','^','^','-','-','-','-','-','-','-','-','-','-','-','-','-','-','^','^','^','-','-','-','-','-','-','-','^','^','^','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
    {'-','-','-','~','~','~','^','^','-','-','-','-','-','-','-','-','-','-','-','-','-','^','^','^','^','-','-','-','-','-','-','-','^','^','^','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
    {'^','^','-','~','~','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','^','^','^','^','^','-','-','-','-','-','-','-','^','^','^','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
    {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
    {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
    {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
    {'-','-','-','-','~','~','~','~','-','-','-','-','-','-','-','-','-','-','-','-','~','~','~','~','~','-','-','-','-','-','-','-','~','~','~','~','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
    {'~','~','~','~','~','~','~','-','-','-','-','-','-','-','-','-','-','-','-','-','~','~','~','~','~','~','-','-','-','-','-','-','~','~','~','~','~','-','-','-','-','-','-','-','-','-','-','-','-','-'},
    {'~','~','~','~','~','~','~','-','-','-','-','-','-','-','-','-','-','-','-','-','~','~','~','~','~','~','-','-','-','-','-','-','~','~','~','~','~','-','-','-','-','-','-','-','-','-','-','-','-','-'},
    {'~','~','~','~','~','~','~','-','-','-','-','-','-','-','-','-','-','-','-','-','~','~','~','~','~','~','-','-','-','-','-','-','~','~','~','~','~','-','-','-','-','-','-','-','-','-','-','-','-','-'},
    {'-','-','-','-','-','^','^','^','^','^','-','-','-','-','-','-','-','-','-','-','^','^','^','^','^','^','-','-','-','-','-','-','^','^','^','^','^','-','-','-','-','-','-','-','-','-','-','-','-','-'},
    {'-','-','-','~','~','~','^','^','^','^','^','-','-','-','-','-','-','-','-','-','^','^','^','^','^','^','-','-','-','-','-','-','^','^','^','^','^','-','-','-','-','-','-','-','-','-','-','-','-','-'},
    {'^','^','-','~','~','~','~','~','^','^','^','^','-','-','-','-','-','-','-','-','^','^','^','^','^','^','-','-','-','-','-','-','^','^','^','^','^','-','-','-','-','-','-','-','-','-','-','-','-','-'},
    {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
    {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'}
};

        static List<(int, int)> virusPosition = new List<(int, int)>();
        static void Main(string[] args)
        {
            int randomNumber = random.Next(-1, 2);
            for(int i = 0; i <minimap.GetLength(0); i++)
            {

                for (int j = 0; j < minimap.GetLength(1); j++)
                {
                    Console.Write(minimap[i, j]);
                }
                    

                Console.Write("\n");
            }


            
            virusPosition.Add((5,5));
            virusPosition.Add((30, 7));
            virusPosition.Add((15, 8));
            //set cursor position using virusPosition[0]
            //Write x

            Console.CursorVisible = false;
            Console.SetCursorPosition(virusPosition[0].Item1, virusPosition[0].Item2);
            Console.Write("X");
            Console.SetCursorPosition(virusPosition[1].Item1, virusPosition[1].Item2);
            Console.Write("X");
            Console.SetCursorPosition(virusPosition[2].Item2, virusPosition[2].Item2);
            Console.Write("X");
            
            for(int i = 0; i < 100000; i++)
            {
                if (i < 1000)
                {
                    // update the virus position 
                    virusPosition[0] = (virusPosition[0].Item1 + randomNumber, virusPosition[0].Item2 + randomNumber);

                    // set cursor position 

                    // write x 


                    Console.SetCursorPosition(virusPosition[0].Item1, virusPosition[0].Item2);
                    Console.Write("X");
                    Console.SetCursorPosition(virusPosition[1].Item1 + randomNumber, virusPosition[1].Item2 + randomNumber);
                    Console.Write("X");
                    Console.SetCursorPosition(virusPosition[2].Item2 + randomNumber, virusPosition[2].Item2 + randomNumber);
                    Console.Write("X");

                    Thread.Sleep(100);
                }
            }
         
        }

        
    }
}
